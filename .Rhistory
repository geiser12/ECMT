print(mean(m2_ld_rgdp[(1+h):T2,]-predict(reg))^2)
}
m2_ld_rgdp = window(ld_rgdp, end = "2011-12-31")
m2_spread = window(spread, end = "2011-12-31")
T2 = dim(m2_ld_rgdp1)[1]
#create a loop to check with equation 2
for (h in c(1,4,8)){
reg = lm(m2_ld_rgdp[(1+h):T2,]~m2_spread[1:(T2-h)])
cat("Current forecasting horizon: ", h)
print(summary(reg))
print(cbind(head(m2_ld_rgdp[(1+h):T2,],10),head(m2_spread[1:(T2-h),],10)))
cat("MSFE for: ", h)
print(mean(m2_ld_rgdp[(1+h):T2,]-predict(reg)^2))
}
#equation 1 loop
for (h in c(1,4,8)){
csum_ld_rgdp = 0*m2_ld_rgdp
for (i in (1:(T2-h))){
csum_ld_rgdp[i,] =sum(m2_ld_rgdp[(i+1):(i+h),])
}
cat("Current forecasting horizon: ", h)
print(cbind(head(m2_ld_rgdp,10),head(csum_ld_rgdp,10)))
print(cbind(head(ld_rgdp_alt,10),head(csum_ld_rgdp,10)))
reg = lm(csum_ld_rgdp[1:(T2-h),]/h~m2_spread[1:(T2-h),])
print(summary(reg))
print(coeftest(reg,vcov. = NeweyWest(reg, lag = round(0.75*T2^(1/3)))))
cat("MSFE for: ", h)
print(mean(csum_ld_rgdp[1:(T2-h),]/h-predict(reg)^2))
}
rm(list = ls())
#load libraries
library(tidyverse)
library(ggplot2)
library(quantmod)
library(Quandl)
library(sandwich)
library(lmtest)
#read in the data from fred
#first data set is the real GPD growth
#second data set loaded in will be:
#10-Year Treasury Constant Maturity Minus 2-Year Treasury Constant Maturity
Quandl.api_key("Bsjtos3Rumnys9NRFspt")
#import the dataset
hw8 <- Quandl(c('FRED/GDPC1','FRED/T10Y2Y'), collapse='quarterly', type="xts")
# Rename the variables
names(hw8)[1] <- "rgdp"
names(hw8)[2] <- "spread"
#see if there are NA values
sum(with(hw8, is.na(rgdp)))
sum(with(hw8, is.na(spread)))
hw8 <- na.omit(hw8)  # 1976 Q2 ~ 2021 Q3
# Simple definition of growth rate vs. log-difference approximation
ld_rgdp <- na.exclude(diff(log(hw8$rgdp))  * 100)
T = dim(hw8)[1]
spread <- hw8[2:T,2]
#create the data that will be used for the loop
m2_ld_rgdp = window(ld_rgdp, end = "2011-12-31")
m2_spread = window(spread, end = "2011-12-31")
T2 = dim(m2_ld_rgdp1)[1]
#create the data that will be used for the loop
m2_ld_rgdp = window(ld_rgdp, end = "2011-12-31")
m2_spread = window(spread, end = "2011-12-31")
T2 = dim(m2_ld_rgdp)[1]
#equation 1 loop
for (h in c(1,4,8)){
csum_ld_rgdp = 0*m2_ld_rgdp
for (i in (1:(T2-h))){
csum_ld_rgdp[i,] =sum(m2_ld_rgdp[(i+1):(i+h),])
}
cat("Current forecasting horizon: ", h)
print(cbind(head(m2_ld_rgdp,10),head(csum_ld_rgdp,10)))
print(cbind(head(ld_rgdp_alt,10),head(csum_ld_rgdp,10)))
reg = lm(csum_ld_rgdp[1:(T2-h),]/h~m2_spread[1:(T2-h),])
print(summary(reg))
print(coeftest(reg,vcov. = NeweyWest(reg, lag = round(0.75*T2^(1/3)))))
cat("MSFE for: ", h)
print(mean(csum_ld_rgdp[1:(T2-h),]/h-predict(reg)^2))
}
#create the data that will be used for the loop
m2_ld_rgdp = window(ld_rgdp, end = "2011-12-31")
m2_spread = window(spread, end = "2011-12-31")
T2 = dim(m2_ld_rgdp)[1]
#equation 1 loop
for (h in c(1,4,8)){
csum_ld_rgdp = 0*m2_ld_rgdp
for (i in (1:(T2-h))){
csum_ld_rgdp[i,] =sum(m2_ld_rgdp[(i+1):(i+h),])
}
cat("Current forecasting horizon: ", h)
print(cbind(head(m2_ld_rgdp,10),head(csum_ld_rgdp,10)))
reg = lm(csum_ld_rgdp[1:(T2-h),]/h~m2_spread[1:(T2-h),])
print(summary(reg))
print(coeftest(reg,vcov. = NeweyWest(reg, lag = round(0.75*T2^(1/3)))))
cat("MSFE for: ", h)
print(mean(csum_ld_rgdp[1:(T2-h),]/h-predict(reg)^2))
}
#create a loop to compute equation 2
for (h in c(1,4,8)){
reg = lm(m2_ld_rgdp[(1+h):T2,]~m2_spread[1:(T2-h)])
cat("Current forecasting horizon: ", h)
print(summary(reg))
print(cbind(head(m2_ld_rgdp[(1+h):T2,],10),head(m2_spread[1:(T2-h),],10)))
cat("MSFE for: ", h)
print(mean(m2_ld_rgdp[(1+h):T2,]-predict(reg)^2))
}
knitr::opts_chunk$set(echo = TRUE)
#load libraries
library(tidyverse)
library(ggplot2)
library(quantmod)
library(Quandl)
#read in the data from fred
#first data set is the real GPD growth
#second data set loaded in will be:
#10-Year Treasury Constant Maturity Minus 2-Year Treasury Constant Maturity
Quandl.api_key("Bsjtos3Rumnys9NRFspt")
macro_data <- Quandl("FRED/GDPC1",
start_date="1976-06-01",
end_date="2021-12-31",
collapse = "quarterly",
transform = "rdiff")
macro_data1 <- Quandl("FRED/T10Y2Y",
start_date="1976-06-01",
end_date="2021-12-31",
collapse = "quarterly")
macro_data<-data.frame(macro_data)
macro_data1<-data.frame(macro_data1)
#delete NA rows
#macro_data1<- macro_data1[-c(182),]
GDP1<- macro_data %>% select(
Date, Value
)
yield<- macro_data1 %>% select(
Date, Value
)
#plot GDP and the yield
GDP_graph<-ggplot()+
geom_line(data = GDP1, aes(x = Date, y = Value))+
theme_classic()
print(GDP_graph)
yield_graph<-ggplot()+
geom_line(data = yield, aes(x = Date, y = Value))+
theme_classic()
print(yield_graph)
#combine the two dataframes before analysis
diff_int_spread<- diff(as.numeric(unlist(yield$Value)))
macro_data$lagged<- diff_int_spread
source('~/GitHub/ECMT/Assignment7_AnswerKey (1).R')
rm(list=ls())
# Install the packages
Packages <- c("Quandl")
# install.packages(Packages, dependencies = TRUE)
invisible(update.packages(Packages, dependencies = TRUE))
invisible(lapply(Packages, library, character.only = TRUE))
Quandl.api_key('Bsjtos3Rumnys9NRFspt')
#===============================================================================================================================================================
# Q1. Import and Plot data (quarterly frequency)
# We are interested in predicting real GDP growth in the US with interest rate spread
# Real GDP (rgdp): Quandl code -> FRED/GDPC1
# I Spread (sprd): Quandl code -> FRED/T10Y2Y
# Do not run the following line more that 50 times a day
hw7 <- Quandl(c('FRED/GDPC1','FRED/T10Y2Y'), collapse='quarterly', type="xts")
# Rename the variables
names(hw7)[1] <- "rgdp"
names(hw7)[2] <- "spread"
sum(with(hw7, is.na(rgdp)))
sum(with(hw7, is.na(spread)))
hw7 <- na.omit(hw7)  # 1976 Q2 ~ 2021 Q3
# Plot the raw data
dev.new(noRStudioGD = TRUE)
par(mfrow = c(2,1))
plot(hw7[,1], main = "Real Gross Domestic Product", xlab = "Quarter", ylab = "Bills of Chained 2005 Dollars", type = "l", col = "blue", yaxis.left = FALSE)
plot(hw7[,2], main = "Interest Rate Spread", xlab = "Quarter", ylab = "Percent", type="l", col="blue", yaxis.left = FALSE)
# graphics.off()
#===============================================================================================================================================================
# Q2. Write a simple linear regression model
# Data transformation (%)
# Simple definition of growth rate vs. log-difference approximation
ld_rgdp <- na.exclude(diff(log(hw7$rgdp))  * 100)
T = dim(hw7)[1]
spread <- hw7[2:T,2]
# Plot the transformed data
dev.new(noRStudioGD = TRUE)
par(mfrow = c(2,1))
plot(ld_rgdp, main = "Real Gross Domestic Product", xlab = "Quarter", ylab = "Growth Rate", type = "l", col = "blue", yaxis.left = FALSE)
plot(spread, main = "Interest Rate Spread", xlab = "Quarter", ylab = "Percent", type="l", col="blue", yaxis.left = FALSE)
#graphics.off()
dev.new(noRStudioGD = TRUE)
plot(spread, type = "l", main="Term Spread", ylab = "Percentage", xlab="Dates", col = "red", yaxis.right = FALSE)
lines(ld_rgdp, type = "l",col = "blue",main="Real GDP Growth Rate")
addLegend('bottomright', c('Term Spread','Real GDP Growth Rate'), pch = c(1,-1), lty = c(1,1), col = c("red", "blue"))
#graphics.off()
# Regression by full sample
full_sample_reg <- lm(ld_rgdp ~ spread)
summary(full_sample_reg)
sub_sample_reg <- lm(window(ld_rgdp, end = "2011-12-31") ~ window(spread,end = "2011-12-31"))
summary(sub_sample_reg)
sub_sample_mean <- lm(window(ld_rgdp, end = "2011-12-31") ~ 1)
# The sub-sample results show that the fit is not driven by COVID
oos_predict_1 = sub_sample_reg$coef[1] + sub_sample_reg$coef[2]*window(spread, start = "2012-01-31")
oos_predict_2 = sub_sample_mean$coef[1] + 0*window(spread, start = "2012-01-31")
realization = window(ld_rgdp, start = "2012-01-31")
# Plot the fitted and actual values
dev.new(noRStudioGD = TRUE)
plot(realization, col = "blue", type='l', lty=1, main = 'OOS Prediction', ylab='Percentage Points', xlab="dates")
lines(oos_predict_1, col = "red",type='l', lty=2)
lines(oos_predict_2, type='l', lty=3)
addLegend('bottomleft', c('True value','Model with Term Spread', 'Model with Mean'), col=c("blue","red","black"), lty = 1:3)
# It is a very similar prediction
fe1 = realization-oos_predict_1
fe2 = realization-oos_predict_2
MSFE = c(mean(fe1^2), mean(fe2^2))
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
#load libraries
library(tidyverse)
library(ggplot2)
library(quantmod)
library(Quandl)
library(sandwich)
library(lmtest)
#read in the data from fred
#first data set is the real GPD growth
#second data set loaded in will be:
#10-Year Treasury Constant Maturity Minus 2-Year Treasury Constant Maturity
Quandl.api_key("Bsjtos3Rumnys9NRFspt")
#import the dataset
hw8 <- Quandl(c('FRED/GDPC1','FRED/T10Y2Y'), collapse='quarterly', type="xts")
# Rename the variables
names(hw8)[1] <- "rgdp"
names(hw8)[2] <- "spread"
#see if there are NA values
sum(with(hw8, is.na(rgdp)))
sum(with(hw8, is.na(spread)))
hw8 <- na.omit(hw8)  # 1976 Q2 ~ 2021 Q3
# Simple definition of growth rate vs. log-difference approximation
ld_rgdp <- na.exclude(diff(log(hw8$rgdp))  * 100)
T = dim(hw8)[1]
spread <- hw8[2:T,2]
#create the data that will be used for the loop
m2_ld_rgdp = window(ld_rgdp, end = "2011-12-31")
m2_spread = window(spread, end = "2011-12-31")
T2 = dim(m2_ld_rgdp)[1]
#equation 1 loop
for (h in c(1,4,8)){
csum_ld_rgdp = 0*m2_ld_rgdp
for (i in (1:(T2-h))){
csum_ld_rgdp[i,] =sum(m2_ld_rgdp[(i+1):(i+h),])
}
cat("Current forecasting horizon: ", h)
print(cbind(head(m2_ld_rgdp,10),head(csum_ld_rgdp,10)))
reg = lm(csum_ld_rgdp[1:(T2-h),]/h~m2_spread[1:(T2-h),])
print(summary(reg))
print(coeftest(reg,vcov. = NeweyWest(reg, lag = round(0.75*T2^(1/3)))))
cat("MSFE for: ", h)
print(mean(csum_ld_rgdp[1:(T2-h),]/h-predict(reg)^2))
}
#create a loop to compute equation 2
for (h in c(1,4,8)){
reg = lm(m2_ld_rgdp[(1+h):T2,]~m2_spread[1:(T2-h)])
cat("Current forecasting horizon: ", h)
print(summary(reg))
print(cbind(head(m2_ld_rgdp[(1+h):T2,],10),head(m2_spread[1:(T2-h),],10)))
cat("MSFE for: ", h)
print(mean(m2_ld_rgdp[(1+h):T2,]-predict(reg)^2))
}
m2_ld_rgdp = window(ld_rgdp, start = "2011-12-31", end = "2022-04-13")
m2_spread = window(spread, start = "2011-12-31", end = "2022-04-13")
T2 = dim(m2_ld_rgdp)[1]
for (h in c(3)){
csum_ld_rgdp = 0*m2_ld_rgdp
for (i in (1:(T2-h))){
csum_ld_rgdp[i,] =sum(m2_ld_rgdp[(i+1):(i+h),])
}
cat("Current forecasting horizon: ", h)
print(cbind(head(m2_ld_rgdp,10),head(csum_ld_rgdp,10)))
reg = lm(csum_ld_rgdp[1:(T2-h),]/h~m2_spread[1:(T2-h),])
print(summary(reg))
print(coeftest(reg,vcov. = NeweyWest(reg, lag = round(0.75*T2^(1/3)))))
cat("MSFE for: ", h)
print(mean(csum_ld_rgdp[1:(T2-h),]/h-predict(reg)^2))
}
#create the data that will be used for the loop
m2_ld_rgdp = window(ld_rgdp, end = "2022-04-13")
m2_spread = window(spread, end = "2022-04-13")
T2 = dim(m2_ld_rgdp)[1]
#equation 1 loop
for (h in c(1,4,8)){
csum_ld_rgdp = 0*m2_ld_rgdp
for (i in (1:(T2-h))){
csum_ld_rgdp[i,] =sum(m2_ld_rgdp[(i+1):(i+h),])
}
cat("Current forecasting horizon: ", h)
print(cbind(head(m2_ld_rgdp,10),head(csum_ld_rgdp,10)))
reg = lm(csum_ld_rgdp[1:(T2-h),]/h~m2_spread[1:(T2-h),])
print(summary(reg))
print(coeftest(reg,vcov. = NeweyWest(reg, lag = round(0.75*T2^(1/3)))))
cat("MSFE for: ", h)
print(mean(csum_ld_rgdp[1:(T2-h),]/h-predict(reg)^2))
}
#create a loop to compute equation 2
for (h in c(1,4,8)){
reg = lm(m2_ld_rgdp[(1+h):T2,]~m2_spread[1:(T2-h)])
cat("Current forecasting horizon: ", h)
print(summary(reg))
print(cbind(head(m2_ld_rgdp[(1+h):T2,],10),head(m2_spread[1:(T2-h),],10)))
cat("MSFE for: ", h)
print(mean(m2_ld_rgdp[(1+h):T2,]-predict(reg)^2))
}
#create the data that will be used for the loop
m2_ld_rgdp = window(ld_rgdp, end = "2011-12-31")
m2_spread = window(spread, end = "2011-12-31")
T2 = dim(m2_ld_rgdp)[1]
#equation 1 loop
for (h in c(1,4,8)){
csum_ld_rgdp = 0*m2_ld_rgdp
for (i in (1:(T2-h))){
csum_ld_rgdp[i,] =sum(m2_ld_rgdp[(i+1):(i+h),])
}
cat("Current forecasting horizon: ", h)
print(cbind(head(m2_ld_rgdp,10),head(csum_ld_rgdp,10)))
reg = lm(csum_ld_rgdp[1:(T2-h),]/h~m2_spread[1:(T2-h),])
print(summary(reg))
print(coeftest(reg,vcov. = NeweyWest(reg, lag = round(0.75*T2^(1/3)))))
cat("MSFE for: ", h)
print(mean(csum_ld_rgdp[1:(T2-h),]/h-predict(reg)^2))
}
#create a loop to compute equation 2
for (h in c(1,4,8)){
reg = lm(m2_ld_rgdp[(1+h):T2,]~m2_spread[1:(T2-h)])
cat("Current forecasting horizon: ", h)
print(summary(reg))
print(cbind(head(m2_ld_rgdp[(1+h):T2,],10),head(m2_spread[1:(T2-h),],10)))
cat("MSFE for: ", h)
msfe1<-data.frame(mean(m2_ld_rgdp[(1+h):T2,]-predict(reg)^2))
}
View(msfe1)
#create the data that will be used for the loop
m2_ld_rgdp = window(ld_rgdp, end = "2011-12-31")
m2_spread = window(spread, end = "2011-12-31")
T2 = dim(m2_ld_rgdp)[1]
#equation 1 loop
for (h in c(1,4,8)){
csum_ld_rgdp = 0*m2_ld_rgdp
for (i in (1:(T2-h))){
csum_ld_rgdp[i,] =sum(m2_ld_rgdp[(i+1):(i+h),])
}
cat("Current forecasting horizon: ", h)
print(cbind(head(m2_ld_rgdp,10),head(csum_ld_rgdp,10)))
reg = lm(csum_ld_rgdp[1:(T2-h),]/h~m2_spread[1:(T2-h),])
print(summary(reg))
print(coeftest(reg,vcov. = NeweyWest(reg, lag = round(0.75*T2^(1/3)))))
cat("MSFE for: ", h)
print(mean(csum_ld_rgdp[1:(T2-h),]/h-predict(reg)^2))
}
#create a loop to compute equation 2
for (h in c(1,4,8)){
reg = lm(m2_ld_rgdp[(1+h):T2,]~m2_spread[1:(T2-h)])
cat("Current forecasting horizon: ", h)
print(summary(reg))
print(cbind(head(m2_ld_rgdp[(1+h):T2,],10),head(m2_spread[1:(T2-h),],10)))
cat("MSFE for: ", h)
print(mean(m2_ld_rgdp[(1+h):T2,]-predict(reg)^2))
}
#create the data that will be used for the loop
m2_ld_rgdp = window(ld_rgdp, end = "2022-04-13")
m2_spread = window(spread, end = "2022-04-13")
T2 = dim(m2_ld_rgdp)[1]
#equation 1 loop
for (h in c(1,4,8)){
csum_ld_rgdp = 0*m2_ld_rgdp
for (i in (1:(T2-h))){
csum_ld_rgdp[i,] =sum(m2_ld_rgdp[(i+1):(i+h),])
}
cat("Current forecasting horizon: ", h)
print(cbind(head(m2_ld_rgdp,10),head(csum_ld_rgdp,10)))
reg = lm(csum_ld_rgdp[1:(T2-h),]/h~m2_spread[1:(T2-h),])
print(summary(reg))
print(coeftest(reg,vcov. = NeweyWest(reg, lag = round(0.75*T2^(1/3)))))
cat("MSFE for: ", h)
print(mean(csum_ld_rgdp[1:(T2-h),]/h-predict(reg)^2))
}
#create a loop to compute equation 2
for (h in c(1,4,8)){
reg = lm(m2_ld_rgdp[(1+h):T2,]~m2_spread[1:(T2-h)])
cat("Current forecasting horizon: ", h)
print(summary(reg))
print(cbind(head(m2_ld_rgdp[(1+h):T2,],10),head(m2_spread[1:(T2-h),],10)))
cat("MSFE for: ", h)
print(mean(m2_ld_rgdp[(1+h):T2,]-predict(reg)^2))
}
#create the data that will be used for the loop
m2_ld_rgdp = window(ld_rgdp, end = "2022-04-13")
m2_spread = window(spread, end = "2022-04-13")
T2 = dim(m2_ld_rgdp)[1]
#equation 1 loop
for (h in c(1,4,8)){
csum_ld_rgdp = 0*m2_ld_rgdp
for (i in (1:(T2-h))){
csum_ld_rgdp[i,] =sum(m2_ld_rgdp[(i+1):(i+h),])
}
cat("Current forecasting horizon: ", h)
print(cbind(head(m2_ld_rgdp,10),head(csum_ld_rgdp,10)))
reg = lm(csum_ld_rgdp[1:(T2-h),]/h~m2_spread[1:(T2-h),])
print(summary(reg))
print(coeftest(reg,vcov. = NeweyWest(reg, lag = round(0.75*T2^(1/3)))))
cat("MSFE for: ", h)
print(mean(csum_ld_rgdp[1:(T2-h),]/h-predict(reg)^2))
}
#create a loop to compute equation 2
for (h in c(1,4,8)){
reg = lm(m2_ld_rgdp[(1+h):T2,]~m2_spread[1:(T2-h)])
cat("Current forecasting horizon: ", h)
print(summary(reg))
print(cbind(head(m2_ld_rgdp[(1+h):T2,],10),head(m2_spread[1:(T2-h),],10)))
cat("MSFE for: ", h)
print(mean(m2_ld_rgdp[(1+h):T2,]-predict(reg)^2))
}
m2_ld_rgdp = window(ld_rgdp, start = "2011-12-31", end = "2022-04-13")
m2_spread = window(spread, start = "2011-12-31", end = "2022-04-13")
T2 = dim(m2_ld_rgdp)[1]
for (h in c(3)){
csum_ld_rgdp = 0*m2_ld_rgdp
for (i in (1:(T2-h))){
csum_ld_rgdp[i,] =sum(m2_ld_rgdp[(i+1):(i+h),])
}
cat("Current forecasting horizon: ", h)
print(cbind(head(m2_ld_rgdp,10),head(csum_ld_rgdp,10)))
reg = lm(csum_ld_rgdp[1:(T2-h),]/h~m2_spread[1:(T2-h),])
print(summary(reg))
print(coeftest(reg,vcov. = NeweyWest(reg, lag = round(0.75*T2^(1/3)))))
cat("MSFE for: ", h)
print(mean(csum_ld_rgdp[1:(T2-h),]/h-predict(reg)^2))
print(predict(reg, interval = "predict"))
}
new.dat <- data.frame(data=0.2576)
m2_ld_rgdp = window(ld_rgdp, start = "2011-12-31", end = "2022-04-13")
m2_spread = window(spread, start = "2011-12-31", end = "2022-04-13")
T2 = dim(m2_ld_rgdp)[1]
new.dat <- data.frame(data=0.2576)
for (h in c(3)){
csum_ld_rgdp = 0*m2_ld_rgdp
for (i in (1:(T2-h))){
csum_ld_rgdp[i,] =sum(m2_ld_rgdp[(i+1):(i+h),])
}
cat("Current forecasting horizon: ", h)
print(cbind(head(m2_ld_rgdp,10),head(csum_ld_rgdp,10)))
reg = lm(csum_ld_rgdp[1:(T2-h),]/h~m2_spread[1:(T2-h),])
print(summary(reg))
print(coeftest(reg,vcov. = NeweyWest(reg, lag = round(0.75*T2^(1/3)))))
cat("MSFE for: ", h)
print(mean(csum_ld_rgdp[1:(T2-h),]/h-predict(reg)^2))
print(predict(reg, newdata = new.dat, interval = "predict"))
}
library(forecast)
m2_ld_rgdp = window(ld_rgdp, start = "2011-12-31", end = "2022-04-13")
m2_spread = window(spread, start = "2011-12-31", end = "2022-04-13")
T2 = dim(m2_ld_rgdp)[1]
for (h in c(3)){
csum_ld_rgdp = 0*m2_ld_rgdp
for (i in (1:(T2-h))){
csum_ld_rgdp[i,] =sum(m2_ld_rgdp[(i+1):(i+h),])
}
cat("Current forecasting horizon: ", h)
print(cbind(head(m2_ld_rgdp,10),head(csum_ld_rgdp,10)))
reg = lm(csum_ld_rgdp[1:(T2-h),]/h~m2_spread[1:(T2-h),])
print(summary(reg))
print(coeftest(reg,vcov. = NeweyWest(reg, lag = round(0.75*T2^(1/3)))))
cat("MSFE for: ", h)
print(mean(csum_ld_rgdp[1:(T2-h),]/h-predict(reg)^2))
new = data.frame("test"= csum_ld_rgdp[1:(T2-h),]/h)
print(forecast(reg, newdata = new))
}
new = data.frame("test"= csum_ld_rgdp[1:(T2-h),]/h)
print(forecast(reg, newdata = new))
m2_ld_rgdp = window(ld_rgdp, start = "2011-12-31", end = "2022-04-13")
m2_spread = window(spread, start = "2011-12-31", end = "2022-04-13")
T2 = dim(m2_ld_rgdp)[1]
for (h in c(3)){
csum_ld_rgdp = 0*m2_ld_rgdp
for (i in (1:(T2-h))){
csum_ld_rgdp[i,] =sum(m2_ld_rgdp[(i+1):(i+h),])
}
cat("Current forecasting horizon: ", h)
print(cbind(head(m2_ld_rgdp,10),head(csum_ld_rgdp,10)))
reg = lm(csum_ld_rgdp[1:(T2-h),]/h~m2_spread[1:(T2-h),])
print(summary(reg))
print(coeftest(reg,vcov. = NeweyWest(reg, lag = round(0.75*T2^(1/3)))))
cat("MSFE for: ", h)
print(mean(csum_ld_rgdp[1:(T2-h),]/h-predict(reg)^2))
new = data.frame("test"= csum_ld_rgdp[1:(T2-h),]/h)
print(forecast(reg, newdata = new))
}
print(forecast(reg, newdata = data.frame(csum_ld_rgdp[1:(T2-h),]/h)))
new = data.frame("test"= csum_ld_rgdp[1:(T2-h),]/h)
View(new)
m2_ld_rgdp = window(ld_rgdp, start = "2011-12-31", end = "2022-04-13")
m2_spread = window(spread, start = "2011-12-31", end = "2022-04-13")
T2 = dim(m2_ld_rgdp)[1]
for (h in c(3)){
csum_ld_rgdp = 0*m2_ld_rgdp
for (i in (1:(T2-h))){
csum_ld_rgdp[i,] =sum(m2_ld_rgdp[(i+1):(i+h),])
}
cat("Current forecasting horizon: ", h)
print(cbind(head(m2_ld_rgdp,10),head(csum_ld_rgdp,10)))
reg = lm(csum_ld_rgdp[1:(T2-h),]/h~m2_spread[1:(T2-h),])
print(summary(reg))
print(coeftest(reg,vcov. = NeweyWest(reg, lag = round(0.75*T2^(1/3)))))
cat("MSFE for: ", h)
print(mean(csum_ld_rgdp[1:(T2-h),]/h-predict(reg)^2))
}
